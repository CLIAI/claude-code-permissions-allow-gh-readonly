{
  "permissions": {
    "allow": [
      "Bash(gh auth status:*)",
      "Bash(gh auth token:*)",
      "Bash(gh browse:*)",
      "Bash(gh gist list:*)",
      "Bash(gh gist ls:*)",
      "Bash(gh gist view:*)",
      "Bash(gh issue list:*)",
      "Bash(gh issue ls:*)",
      "Bash(gh issue status:*)",
      "Bash(gh issue view:*)",
      "Bash(gh issue develop --list:*)",
      "Bash(gh org list:*)",
      "Bash(gh org ls:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr status:*)",
      "Bash(gh pr checks:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh pr view:*)",
      "Bash(gh project field-list:*)",
      "Bash(gh project item-list:*)",
      "Bash(gh project list:*)",
      "Bash(gh project ls:*)",
      "Bash(gh project view:*)",
      "Bash(gh release list:*)",
      "Bash(gh release view:*)",
      "Bash(gh release download:*)",
      "Bash(gh repo list:*)",
      "Bash(gh repo view:*)",
      "Bash(gh repo gitignore list:*)",
      "Bash(gh repo gitignore view:*)",
      "Bash(gh repo license list:*)",
      "Bash(gh repo license view:*)",
      "Bash(gh repo autolink list:*)",
      "Bash(gh repo autolink view:*)",
      "Bash(gh repo deploy-key list:*)",
      "Bash(gh cache list:*)",
      "Bash(gh cache ls:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh run watch:*)",
      "Bash(gh run download:*)",
      "Bash(gh workflow list:*)",
      "Bash(gh workflow ls:*)",
      "Bash(gh workflow view:*)",
      "Bash(gh api user:*)",
      "Bash(gh api users/*:*)",
      "Bash(gh api orgs/*:*)",
      "Bash(gh api repos/*:*)",
      "Bash(gh api repos/{owner}/{repo}:*)",
      "Bash(gh api repos/{owner}/{repo}/releases:*)",
      "Bash(gh api repos/{owner}/{repo}/issues:*)",
      "Bash(gh api repos/{owner}/{repo}/pulls:*)",
      "Bash(gh api repos/{owner}/{repo}/commits:*)",
      "Bash(gh api repos/{owner}/{repo}/branches:*)",
      "Bash(gh api repos/{owner}/{repo}/tags:*)",
      "Bash(gh api repos/{owner}/{repo}/contributors:*)",
      "Bash(gh api repos/{owner}/{repo}/languages:*)",
      "Bash(gh api repos/{owner}/{repo}/topics:*)",
      "Bash(gh api repos/{owner}/{repo}/readme:*)",
      "Bash(gh api repos/{owner}/{repo}/license:*)",
      "Bash(gh api repos/{owner}/{repo}/contents/*:*)",
      "Bash(gh api repos/{owner}/{repo}/issues/*/comments:*)",
      "Bash(gh api repos/{owner}/{repo}/pulls/*/comments:*)",
      "Bash(gh api repos/{owner}/{repo}/pulls/*/reviews:*)",
      "Bash(gh api repos/{owner}/{repo}/pulls/*/files:*)",
      "Bash(gh api repos/{owner}/{repo}/actions/workflows:*)",
      "Bash(gh api repos/{owner}/{repo}/actions/runs:*)",
      "Bash(gh api gists:*)",
      "Bash(gh api gists/*:*)",
      "Bash(gh api search/repositories:*)",
      "Bash(gh api search/issues:*)",
      "Bash(gh api search/users:*)",
      "Bash(gh api search/code:*)",
      "Bash(gh api rate_limit:*)",
      "Bash(gh api notifications:*)",
      "Bash(gh api -X GET *:*)",
      "Bash(gh api --method GET *:*)",
      "Bash(gh api graphql --paginate -f query='*':*)",
      "Bash(gh search code:*)",
      "Bash(gh search commits:*)",
      "Bash(gh search issues:*)",
      "Bash(gh search prs:*)",
      "Bash(gh search repos:*)",
      "Bash(gh status:*)",
      "Bash(gh alias list:*)",
      "Bash(gh attestation download:*)",
      "Bash(gh attestation trusted-root:*)",
      "Bash(gh completion:*)",
      "Bash(gh config get:*)",
      "Bash(gh config list:*)",
      "Bash(gh extension list:*)",
      "Bash(gh extension search:*)",
      "Bash(gh gpg-key list:*)",
      "Bash(gh label list:*)",
      "Bash(gh preview prompter:*)",
      "Bash(gh ruleset check:*)",
      "Bash(gh ruleset list:*)",
      "Bash(gh ruleset view:*)",
      "Bash(gh secret list:*)",
      "Bash(gh ssh-key list:*)",
      "Bash(gh variable get:*)",
      "Bash(gh variable list:*)"
    ],
    "deny": []
  }
}